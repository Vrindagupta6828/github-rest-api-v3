{"version":3,"sources":["services/GitHub.js","components/visualization.js","components/main.js","components/header.js","components/footer.js","App.js","reportWebVitals.js","index.js"],"names":["api","getDetails","username","reposUrl","gistsUrl","followersUrl","followingUrl","starredUrl","requests","axios","get","params","per_page","all","then","spread","repos","gists","followers","following","starred","data","statusText","err","console","log","Visualization","props","className","JSON","stringify","Main","useState","setUsername","info","setInfo","Form","onSubmit","e","preventDefault","catch","FormGroup","row","Label","for","xs","md","Col","InputGroup","InputGroupAddon","addonType","Button","Input","type","required","value","onChange","target","block","color","Header","Navbar","dark","NavbarBrand","href","Footer","Row","rel","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3503435.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = {\r\n\tgetDetails: (username) => {\r\n\t\t// URLs to be used for different API endpoints\r\n\t\tconst reposUrl = `https://api.github.com/users/${username}/repos`,\r\n\t\tgistsUrl = `https://api.github.com/users/${username}/gists`,\r\n\t\tfollowersUrl = `https://api.github.com/users/${username}/followers`,\r\n\t\tfollowingUrl = `https://api.github.com/users/${username}/following`,\r\n\t\tstarredUrl = `https://api.github.com/users/${username}/starred`;\r\n\r\n\t\t/**\r\n\t\t * The API returns atmost 30 entries by default unless the\r\n\t\t * 'per_page' GET parameter is specified, which can be a\r\n\t\t * 100 at maximum. Multiple calls for each page are required\r\n\t\t * to fetch all entries. */\r\n\t\tconst requests = [\r\n\t\t\taxios.get(reposUrl, { params: { per_page: 100 } }),\r\n\t\t\taxios.get(gistsUrl, { params: { per_page: 100 } }),\r\n\t\t\taxios.get(followersUrl, { params: { per_page: 100 } }),\r\n\t\t\taxios.get(followingUrl, { params: { per_page: 100 } }),\r\n\t\t\taxios.get(starredUrl, { params: { per_page: 100 } })\r\n\t\t];\r\n\r\n\t\treturn axios.all(requests)\r\n\t\t\t.then(axios.spread((...responses) => {\r\n\t\t\t\tconst repos = responses[0],\r\n\t\t\t\t\t\tgists = responses[1],\r\n\t\t\t\t\t\tfollowers = responses[2],\r\n\t\t\t\t\t\tfollowing = responses[3],\r\n\t\t\t\t\t\tstarred = responses[4];\r\n\r\n\t\t\t\tconst data = {\r\n\t\t\t\t\tusername,\r\n\t\t\t\t\trepos: repos.statusText === 'OK' ? repos.data : null,\r\n\t\t\t\t\tgists: gists.statusText === 'OK' ? gists.data : null,\r\n\t\t\t\t\tfollowers: followers.statusText === 'OK' ? followers.data : null,\r\n\t\t\t\t\tfollowing: following.statusText === 'OK' ? following.data : null,\r\n\t\t\t\t\tstarred: starred.statusText === 'OK' ? starred.data : null,\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn data;\r\n\t\t\t}), err => console.log(err))\r\n\t}\r\n};\r\n\r\nexport default api;","const Visualization = (props) => {\r\n\r\n\treturn <pre className='text-left'>{JSON.stringify(props.data, null, '    ')}</pre>; // TODO\r\n}\r\n\r\nexport default Visualization;","import { useState } from 'react';\r\nimport { Input, Form, FormGroup, Label,\r\n\tCol, \r\n\tButton,\r\n\tInputGroup,\r\n\tInputGroupAddon} from 'reactstrap';\r\nimport api from '../services/GitHub';\r\nimport Visualization from './visualization';\r\nimport './main.css';\r\n\r\nconst Main = () => {\r\n\tconst [username, setUsername] = useState('');\r\n\tconst [info, setInfo] = useState(null);\r\n\r\n\tconst updateUsername = (e) => setUsername(e.target.value);\r\n\r\n\tconst sendUsername = (e) => {\r\n\t\te.preventDefault();\r\n\t\tapi.getDetails(username)\r\n\t\t\t.then(data => {\r\n\t\t\t\tsetInfo(data);\r\n\t\t\t\treturn data;\r\n\t\t\t})\r\n\t\t\t.then(data => console.log(data))\r\n\t\t\t.catch(err => console.log(err));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='w-100'>\r\n\t\t\t<main className=\"Main border container-fluid bg-light p-md-5 pt-3 align-items-center\">\r\n\t\t\t\t<Form onSubmit={sendUsername}>\r\n\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t<Label for='username' className='offset-md-1' xs={12} md={1}>\r\n\t\t\t\t\t\t\t<span className='float-left float-md-right'>Username: </span>\r\n\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t<Col xs={12} md={8} className='mb-2 mb-md-0'>\r\n\t\t\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t\t\t<InputGroupAddon addonType='prepend'>\r\n\t\t\t\t\t\t\t\t\t<Button className='bg-light text-dark font-weight-bold border'>@</Button>\r\n\t\t\t\t\t\t\t\t</InputGroupAddon>\r\n\t\t\t\t\t\t\t\t<Input type='text' required\r\n\t\t\t\t\t\t\t\t\tvalue={username} onChange={updateUsername}/>\r\n\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col xs={12} md={2} className='mb-1 mb-md-0' >\r\n\t\t\t\t\t\t\t<Button block type='submit' color='primary'>Submit</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t</Form>\r\n\t\t\t\t<Visualization data={info}/>\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Main;","import { Navbar, NavbarBrand } from 'reactstrap';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header >\r\n\t\t\t<Navbar color='primary' dark>\r\n\t\t\t\t<NavbarBrand href='./'>GitHub API Playground</NavbarBrand>\r\n\t\t\t</Navbar>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;","import { Row, Col } from \"reactstrap\";\r\nimport './footer.css';\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<footer className='align-items-center bg-primary'>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<Row className='p-4 text-white'>\r\n\t\t\t\t\t<Col className='offset-md-2' md={8}>\r\n\t\t\t\t\t\tÂ© <a href='https://adityabisoi.github.io/' rel=\"noreferrer\" target='_blank'>Aditya Bisoi</a>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;","import './App.css';\nimport Main from './components/main';\nimport Header from './components/header';\nimport Footer from './components/footer';\n\nconst App = () => {\n  return(\n    <div className=\"App\">\n      <Header/>\n      <Main/>\n      <Footer/>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'typeface-roboto-condensed';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}